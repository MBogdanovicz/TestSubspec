# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)


platform :ios do
  before_all do
    update_fastlane
    #cocoapods    withoutcocoa
  end

  desc "Compile the project"
  lane :compile do
    # add actions here: https://docs.fastlane.tools/actions
    #Build App
    build_app(scheme: "A2BCore",
      configuration: "Dev",
      skip_package_ipa: true,
      skip_codesigning: true,
      output_directory: "./build"
     )
  end

  desc "Testing the project"
  lane :verify do
    # add actions here: https://docs.fastlane.tools/actions
    #Make tests
    #run_tests(scheme: "D-Tolling Dev")
  end
  
  desc "Testing the project at night"
  lane :install do
    # add actions here: https://docs.fastlane.tools/actions
    #Make tests
    #run_tests(scheme: "D-Tolling Dev")
  end

  desc "Deploy Release project"
  lane :deploy_prod do |values|
  
    # GET VERSION
    new_version = versionChange(version: values[:version])
    increment_build_number(build_number: number_of_commits)

    version = get_version_number(target: "A2BCore")
    
    build_app(scheme: "Publish",
      skip_package_ipa: true,
      skip_codesigning: true,
      xcargs: "USERNAME=ENV['USER_NEXUS'] PASSWORD=ENV['PASS_NEXUS'] MARKETING_VERSION=#{version}"
     )

    uploadToNexus()
    pushPodspec()
     
  end
  
  desc "Deploy Test project QA"
  lane :deploy_qa do |values|
    
    # GET VERSION
    new_version = versionChange(version: values[:version])
    increment_build_number(build_number: number_of_commits)

    version = get_version_number(target: "A2BCore")
    
    build_app(scheme: "Publish",
      skip_package_ipa: true,
      skip_codesigning: true,
      xcargs: "USERNAME=ENV['USER_NEXUS'] PASSWORD=ENV['PASS_NEXUS'] MARKETING_VERSION=#{version}"
     )

    uploadToNexus()
    pushPodspec()

  end
  
  desc "Deploy Test project DEV"
  lane :deploy_dev do |values|
    
    # GET VERSION
    new_version = versionChange(version: values[:version])
    increment_build_number(build_number: number_of_commits)

    version = get_version_number(target: "A2BCore")
    
    build_app(scheme: "Publish",
      skip_package_ipa: true,
      skip_codesigning: true,
      xcargs: "USERNAME=ENV['USER_NEXUS'] PASSWORD=ENV['PASS_NEXUS'] MARKETING_VERSION=#{version}"
     )

    uploadToNexus()
    pushPodspec()

  end
  
  desc "Change Version Project"
  lane :versionChange do |values|
    version = values[:version]
    new_version = version.split("-")[0]
    increment_version_number(
      version_number: new_version # Set a specific version number
    )
    new_version
  end

  desc "Get Change Log"
  lane :changelog do |values|
    path = "../changelog.txt"
    data = File.read(path)
    changeList = data.split("###")
    changes = changeList[1]
    changes
  end

  desc "Upload zip to Nexus"
  lane :uploadToNexus do |values|
    version = get_version_number(target: "A2BCore")
    sh("curl","-v", "-u", "#{ENV['USER_NEXUS']}:#{ENV['PASS_NEXUS']}", "--upload-file", "../outputs/A2BCore-#{version}.zip", "http://bit-develop-01.brisa.pt/nexus/repository/downloads/commons/ios-components/A2BCore-#{version}.zip")
  end

  desc "Push podspec"
  lane :pushPodspec do |values|
    version = get_version_number(target: "A2BCore")
    sh("git clone 'ssh://#{ENV['GERRIT_USER']}@corp.a-to-be.org:29418/commons/pod-specs' && scp -p -P 29418 #{ENV['GERRIT_USER']}@corp.a-to-be.org:hooks/commit-msg 'pod-specs/.git/hooks/'")
    sh("mkdir -p ./pod-specs/Specs/A2BCore")   
    sh("mkdir -p ./pod-specs/Specs/A2BCore/#{version}")
    sh("cp ../outputs/A2BCore.podspec ./pod-specs/Specs/A2BCore/#{version}/A2BCore.podspec")

    sh("cd ./pod-specs && git add * && git commit -m 'Updated AtobePods with framework: A2BCore, and version: #{version}'")
    sh("cd ./pod-specs && git push origin HEAD:refs/heads/master")
    sh("rm -rf ./pod-specs")
  end

  after_all do |lane|
  end

  error do |lane, exception|
  end
end